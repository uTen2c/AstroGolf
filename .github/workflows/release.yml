name: Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write
      actions: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate build number
        uses: onyxmueller/build-tag-number@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2
      - name: Build
        run: |
          msbuild AstroGolf.sln /t:build /p:Configuration=Release /p:Platform=x64

      - run: |
          ls

      - name: Copy assets to Release directory
        run: |
          Copy-Item -Path "AstroGolf/assets" -Destination "x64/Release/" -Recurse -Force

      - name: Create release archive
        run: |
          Compress-Archive -Path "AstroGolf/x64/Release/*" -DestinationPath "AstroGolf-build.$BUILD_NUMBER.zip"

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.BUILD_NUMBER }}
          release_name: AstroGolf Release build.${{ env.BUILD_NUMBER }}
          body: |
            AstroGolf Build number: ${{ env.BUILD_NUMBER }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./AstroGolf-build.${{ env.BUILD_NUMBER }}.zip
          asset_name: AstroGolf-build.${{ env.BUILD_NUMBER }}.zip
          asset_content_type: application/zip
